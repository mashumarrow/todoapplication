package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/mashumarrow/todoapplication/backend/graph"
	"github.com/mashumarrow/todoapplication/backend/graph/model"
	"github.com/mashumarrow/todoapplication/backend/models"
)

// Classroomid is the resolver for the classroomid field.
func (r *classroomResolver) Classroomid(ctx context.Context, obj *models.Classroom) (string, error) {
	panic(fmt.Errorf("not implemented: Classroomid - classroomid"))
}

// CreateClassroom is the resolver for the createClassroom field.
func (r *mutationResolver) CreateClassroom(ctx context.Context, input model.NewClassroom) (*models.Classroom, error) {
	panic(fmt.Errorf("not implemented: CreateClassroom - createClassroom"))
}

// Classrooms is the resolver for the classrooms field.
func (r *queryResolver) Classrooms(ctx context.Context) ([]*models.Classroom, error) {
	panic(fmt.Errorf("not implemented: Classrooms - classrooms"))
}

// Classroom is the resolver for the classroom field.
func (r *queryResolver) Classroom(ctx context.Context, classroomid string) (*models.Classroom, error) {
	panic(fmt.Errorf("not implemented: Classroom - classroom"))
}

// Classroom returns graph.ClassroomResolver implementation.
func (r *Resolver) Classroom() graph.ClassroomResolver { return &classroomResolver{r} }

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type classroomResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
