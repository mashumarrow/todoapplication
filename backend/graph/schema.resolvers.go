package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/mashumarrow/todoapplication/backend/graph/model"
	"github.com/mashumarrow/todoapplication/backend/models"
)


// ID is the resolver for the id field.
func (r *todoResolver) ID(ctx context.Context, obj *models.Todo) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Text is the resolver for the text field.
func (r *todoResolver) Text(ctx context.Context, obj *models.Todo) (string, error) {
	panic(fmt.Errorf("not implemented: Text - text"))
}

// Done is the resolver for the done field.
func (r *todoResolver) Done(ctx context.Context, obj *models.Todo) (bool, error) {
	panic(fmt.Errorf("not implemented: Done - done"))
}

// User is the resolver for the user field.
func (r *todoResolver) User(ctx context.Context, obj *models.Todo) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Text is the resolver for the text field.
func (r *newTodoResolver) Text(ctx context.Context, obj *models.NewTodo, data string) error {
	panic(fmt.Errorf("not implemented: Text - text"))
}

// UserID is the resolver for the userId field.
func (r *newTodoResolver) UserID(ctx context.Context, obj *models.NewTodo, data string) error {
	panic(fmt.Errorf("not implemented: UserID - userId"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Todo returns TodoResolver implementation.
func (r *Resolver) Todo() TodoResolver { return &todoResolver{r} }

// NewTodo returns NewTodoResolver implementation.
func (r *Resolver) NewTodo() NewTodoResolver { return &newTodoResolver{r} }


type todoResolver struct{ *Resolver }
type newTodoResolver struct{ *Resolver }
